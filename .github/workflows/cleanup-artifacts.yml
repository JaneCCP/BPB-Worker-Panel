name: Cleanup Old Artifacts

permissions:
  actions: write
  contents: read

on:
  # 每天凌晨2点自动运行
  schedule:
    - cron: '0 2 * * *'
  
  # 允许手动触发
  workflow_dispatch:
    inputs:
      retention_days:
        description: '保留天数 (默认: 7天)'
        required: false
        default: '7'
        type: string
      dry_run:
        description: '仅预览，不实际删除'
        required: false
        default: false
        type: boolean

jobs:
  cleanup:
    runs-on: ubuntu-latest
    
    steps:
      - name: Cleanup old artifacts
        uses: actions/github-script@v7
        with:
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            
            // 获取输入参数，如果没有则使用默认值
            const retentionDays = parseInt('${{ github.event.inputs.retention_days }}' || '7');
            const dryRun = '${{ github.event.inputs.dry_run }}' === 'true';
            
            console.log(`🧹 开始清理 artifacts...`);
            console.log(`📅 保留天数: ${retentionDays} 天`);
            console.log(`🔍 预览模式: ${dryRun ? '是' : '否'}`);
            console.log('');
            
            // 获取所有 artifacts
            let allArtifacts = [];
            let page = 1;
            
            while (true) {
              const response = await github.rest.actions.listArtifactsForRepo({
                owner: owner,
                repo: repo,
                per_page: 100,
                page: page
              });
              
              if (response.data.artifacts.length === 0) {
                break;
              }
              
              allArtifacts = allArtifacts.concat(response.data.artifacts);
              page++;
            }
            
            console.log(`📦 找到 ${allArtifacts.length} 个 artifacts`);
            
            // 计算截止时间
            const cutoffDate = new Date();
            cutoffDate.setDate(cutoffDate.getDate() - retentionDays);
            
            console.log(`🗓️  删除 ${cutoffDate.toISOString()} 之前创建的 artifacts`);
            console.log('');
            
            // 筛选需要删除的 artifacts
            const artifactsToDelete = allArtifacts.filter(artifact => {
              const createdAt = new Date(artifact.created_at);
              return createdAt < cutoffDate;
            });
            
            if (artifactsToDelete.length === 0) {
              console.log('✅ 没有需要清理的 artifacts');
              return;
            }
            
            console.log(`🗑️  找到 ${artifactsToDelete.length} 个需要删除的 artifacts:`);
            
            let deletedCount = 0;
            let failedCount = 0;
            let totalSize = 0;
            
            for (const artifact of artifactsToDelete) {
              const createdAt = new Date(artifact.created_at);
              const ageInDays = Math.floor((Date.now() - createdAt.getTime()) / (1000 * 60 * 60 * 24));
              const sizeInMB = (artifact.size_in_bytes / (1024 * 1024)).toFixed(2);
              
              totalSize += artifact.size_in_bytes;
              
              console.log(`  📄 ${artifact.name}`);
              console.log(`     ID: ${artifact.id}`);
              console.log(`     创建时间: ${createdAt.toISOString()}`);
              console.log(`     年龄: ${ageInDays} 天`);
              console.log(`     大小: ${sizeInMB} MB`);
              
              if (!dryRun) {
                try {
                  await github.rest.actions.deleteArtifact({
                    owner: owner,
                    repo: repo,
                    artifact_id: artifact.id
                  });
                  console.log(`     ✅ 删除成功`);
                  deletedCount++;
                } catch (error) {
                  console.log(`     ❌ 删除失败: ${error.message}`);
                  failedCount++;
                }
              } else {
                console.log(`     🔍 预览模式 - 将被删除`);
                deletedCount++;
              }
              console.log('');
            }
            
            const totalSizeInMB = (totalSize / (1024 * 1024)).toFixed(2);
            
            console.log('📊 清理统计:');
            console.log(`   总计 artifacts: ${allArtifacts.length}`);
            console.log(`   需要删除: ${artifactsToDelete.length}`);
            console.log(`   ${dryRun ? '预计' : '实际'}删除: ${deletedCount}`);
            if (!dryRun && failedCount > 0) {
              console.log(`   删除失败: ${failedCount}`);
            }
            console.log(`   ${dryRun ? '预计' : '实际'}释放空间: ${totalSizeInMB} MB`);
            
            if (dryRun) {
              console.log('');
              console.log('💡 这是预览模式，没有实际删除任何文件');
              console.log('   要执行实际删除，请将 "仅预览，不实际删除" 设置为 false');
            }