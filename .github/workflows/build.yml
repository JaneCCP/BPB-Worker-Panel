name: Build and Release

permissions:
  contents: write

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */1 * * *'

jobs:
  build:
    if: |
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'schedule' && github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Get release version
        id: get_version
        run: echo "RELEASE_VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Check release version
        run: echo "Release version is $RELEASE_VERSION"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "latest"

      - name: Install dependencies
        run: npm install --production

      - name: Build project
        run: npm run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            dist/
            wrangler.toml
            package.json
            RELEASE.md
          retention-days: 1

      - name: Read release note
        id: read_release
        shell: bash
        run: |
          r=$(cat RELEASE.md)         
          r="${r//'%'/'%25'}"                               
          r="${r//$'\n'/'%0A'}"                             
          r="${r//$'\r'/'%0D'}"                             
          echo "RELEASE_BODY=$r" >> $GITHUB_OUTPUT          

      - name: Upload Release Assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*
          tag: v${{ env.RELEASE_VERSION }}
          release_name: Release v${{ env.RELEASE_VERSION }}
          overwrite: true
          file_glob: true
          prerelease: ${{ github.ref != 'refs/heads/main' }}
          promote: ${{ github.ref == 'refs/heads/main' }}
          body: ${{ steps.read_release.outputs.RELEASE_BODY }}

  deploy:
    needs: build
    if: |
      github.event_name == 'workflow_dispatch' || 
      (github.event_name == 'schedule' && github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Configure wrangler.toml
        run: |
          sed -i "s/__WORKER_NAME__/${{ secrets.CLOUDFLARE_WORKER_NAME }}/g" wrangler.toml
          sed -i "s/__KV_ID__/${{ secrets.CLOUDFLARE_KV_ID }}/g" wrangler.toml
          sed -i "s/__ACCOUNT_ID__/${{ secrets.CLOUDFLARE_ACCOUNT_ID }}/g" wrangler.toml

      - name: Deploy to Cloudflare Worker
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
