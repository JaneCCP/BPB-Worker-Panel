name: Build and Release

permissions:
  contents: write

on:
  workflow_dispatch:

jobs:
  build:
    if: github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v4

      - name: Get release version
        id: get_version
        run: echo "RELEASE_VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Check release version
        run: echo "Release version is $RELEASE_VERSION"

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "latest"

      - name: Install dependencies
        run: npm install --production

      - name: Build project
        run: npm run build

      - name: Read release note
        id: read_release
        shell: bash
        run: |
          r=$(cat RELEASE.md)         
          r="${r//'%'/'%25'}"                               
          r="${r//$'\n'/'%0A'}"                             
          r="${r//$'\r'/'%0D'}"                             
          echo "RELEASE_BODY=$r" >> $GITHUB_OUTPUT          

      - name: Upload Release Assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: dist/*
          tag: v${{ env.RELEASE_VERSION }}
          release_name: Release v${{ env.RELEASE_VERSION }}
          overwrite: true
          file_glob: true
          prerelease: ${{ github.ref != 'refs/heads/main' }}
          promote: ${{ github.ref == 'refs/heads/main' }}
          body: ${{ steps.read_release.outputs.RELEASE_BODY }}

      - name: Generate wrangler.toml
        run: |
          # 动态生成当前日期
          CURRENT_DATE=$(date -u +"%Y-%m-%d")
          
          # 创建基础wrangler.toml
          cat > wrangler.toml << EOF
          name = "${{ secrets.CLOUDFLARE_WORKER_NAME }}"
          main = "dist/worker.js"
          compatibility_date = "$CURRENT_DATE"
          account_id = "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}"
          
          [vars]
          ENVIRONMENT = "production"
          
          [[kv_namespaces]]
          binding = "kv"
          id = "${{ secrets.CLOUDFLARE_KV_NAMESPACE_ID }}"
          EOF
          
          # 如果提供了路由URL，添加路由配置
          if [ -n "${{ secrets.CLOUDFLARE_ROUTE_URL }}" ]; then
            cat >> wrangler.toml << EOF
          
          [env.production]
          name = "${{ secrets.CLOUDFLARE_WORKER_NAME }}"
          routes = [
            { pattern = "${{ secrets.CLOUDFLARE_ROUTE_URL }}", custom_domain = true }
          ]
          EOF
          else
            cat >> wrangler.toml << EOF
          
          [env.production]
          name = "${{ secrets.CLOUDFLARE_WORKER_NAME }}"
          EOF
          fi

      - name: Deploy to Cloudflare Workers
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: deploy --env production
