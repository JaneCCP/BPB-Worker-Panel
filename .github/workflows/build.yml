deploy:
  needs: build
  runs-on: ubuntu-latest
  if: github.event_name == 'workflow_dispatch'
    
  steps:
    - name: Check out the code
      uses: actions/checkout@v4

    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: dist/

    - name: Check the worker.js file before deploy
      run: cat dist/worker.js

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "latest"

    - name: Install Wrangler
      run: npm install -g wrangler

    - name: Update wrangler.toml with secrets
      run: |
        node -e "
          const fs = require('fs');
          let content = fs.readFileSync('wrangler.toml', 'utf8');
          content = content.replace(/__WORKER_NAME__/g, process.env.WORKER_NAME);
          content = content.replace(/__ACCOUNT_ID__/g, process.env.ACCOUNT_ID);
          content = content.replace(/__ZONE_ID__/g, process.env.ZONE_ID);
          content = content.replace(/__KV_ID__/g, process.env.KV_ID);
          fs.writeFileSync('wrangler.toml', content);
        "
      env:
        WORKER_NAME: ${{ secrets.CLOUDFLARE_WORKER_NAME }}
        ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        KV_ID: ${{ secrets.CLOUDFLARE_KV_ID }}

    - name: Deploy to Cloudflare Workers
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      run: |
        wrangler deploy --env production
